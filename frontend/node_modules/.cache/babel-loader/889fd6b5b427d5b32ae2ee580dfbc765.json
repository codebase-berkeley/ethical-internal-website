{"ast":null,"code":"var _jsxFileName = \"/Users/amitavbaruah/Documents/ethical-internal-website/src/components/Login.js\";\nimport \"./Login.css\";\nimport React, { Component } from \"react\";\nimport ethicalLogo from \"./ethical.png\";\n\nconst bcryptjs = require(\"bcryptjs\");\n\nconst fetch = require(\"node-fetch\");\n\nconst localStorage = require(\"local-storage\");\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      hash: \"\",\n      access_token: \"\",\n      validity: false\n    };\n  }\n  /*\n  function that checks  if access token is in the local storage.\n  If it is, it will route to announcement page and if it is not,\n  it will route to login page.\n  */\n\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/checkToken\", {\n      headers: {\n        authorization: localStorage.get(\"token\"),\n        Accept: \"application.json\"\n      }\n    });\n    const json = await response.json();\n\n    if (json.result === true) {\n      let path = \"/announcements\";\n      this.props.history.push(path);\n    }\n  }\n\n  async hashPassword() {\n    const hash = await bcryptjs.hash(this.state.input, 0);\n    this.setState({\n      hash: hash\n    });\n    return this.state.hash;\n  }\n\n  routeChange() {\n    let path = \"/announcements\";\n    this.props.history.push(path);\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hashedAttempt: await this.hashPassword()\n      })\n    });\n    const json = await response.json();\n    this.setState({\n      access_token: json.token,\n      validity: json.correctPassword\n    });\n\n    if (!this.state.validity) {\n      alert(\"Wrong password\");\n    } else {\n      localStorage.set(\"token\", this.state.access_token);\n      this.routeChange();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"pic\",\n      src: ethicalLogo,\n      alt: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Welcome home EthiCal members, please log in below!\")), React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"input\",\n      value: this.state.input,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      onClick: () => this.buttonClick(),\n      id: \"button\",\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", \"Login\", \" \")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/amitavbaruah/Documents/ethical-internal-website/src/components/Login.js"],"names":["React","Component","ethicalLogo","bcryptjs","require","fetch","localStorage","Login","constructor","handleChange","event","setState","input","target","value","state","hash","access_token","validity","componentDidMount","response","headers","authorization","get","Accept","json","result","path","props","history","push","hashPassword","routeChange","buttonClick","method","body","JSON","stringify","hashedAttempt","token","correctPassword","alert","set","render"],"mappings":"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","sourcesContent":["import \"./Login.css\";\nimport React, { Component } from \"react\";\nimport ethicalLogo from \"./ethical.png\";\nconst bcryptjs = require(\"bcryptjs\");\nconst fetch = require(\"node-fetch\");\nconst localStorage = require(\"local-storage\");\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      hash: \"\",\n      access_token: \"\",\n      validity: false\n    };\n  }\n\n  /*\n  function that checks  if access token is in the local storage.\n  If it is, it will route to announcement page and if it is not,\n  it will route to login page.\n  */\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/checkToken\", {\n      headers: {\n        authorization: localStorage.get(\"token\"),\n        Accept: \"application.json\"\n      }\n    });\n    const json = await response.json();\n    if (json.result === true) {\n      let path = \"/announcements\";\n      this.props.history.push(path);\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  async hashPassword() {\n    const hash = await bcryptjs.hash(this.state.input, 0);\n    this.setState({ hash: hash });\n    return this.state.hash;\n  }\n\n  routeChange() {\n    let path = \"/announcements\";\n    this.props.history.push(path);\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hashedAttempt: await this.hashPassword()\n      })\n    });\n    const json = await response.json();\n    this.setState({ access_token: json.token, validity: json.correctPassword });\n    if (!this.state.validity) {\n      alert(\"Wrong password\");\n    } else {\n      localStorage.set(\"token\", this.state.access_token);\n      this.routeChange();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"Block\"></div>\n        <div className=\"logo\">\n          <img className=\"pic\" src={ethicalLogo} alt=\"profile\" />\n        </div>\n        <div className=\"hi\">\n          <div>Welcome home EthiCal members, please log in below!</div>\n        </div>\n        <div className=\"login\">\n          <form>\n            <label>\n              Password:\n              <input\n                type=\"password\"\n                name=\"input\"\n                value={this.state.input}\n                onChange={this.handleChange}\n              />\n            </label>\n          </form>\n          <button\n            onClick={() => this.buttonClick()}\n            id=\"button\"\n            type=\"submit\"\n            value=\"Login\"\n          >\n            {\" \"}\n            Login{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}