{"ast":null,"code":"var _jsxFileName = \"/Users/amitavbaruah/Documents/ethical-internal-website/src/components/Orders.js\";\nimport React from \"react\";\nimport OrderDataTable from \"./OrderDataTable\";\nimport Checkbox from \"./Checkbox\";\n\nconst localStorage = require(\"local-storage\");\n\nclass Orders extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orderRows: []\n    };\n    this.updatePickUp = this.updatePickUp.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/orders\", {\n      headers: {\n        authorization: localStorage.get(\"token\")\n      },\n      Accept: \"application.json\"\n    });\n\n    if (response.status === 401) {\n      let path = \"/login\";\n      this.props.history.push(path);\n    }\n\n    const json = await response.json();\n    this.setState({\n      orderRows: json.map(elem => elem)\n    });\n  }\n\n  updatePickUp(index, status) {\n    var arrayOfObjects = this.state.orderRows;\n\n    if (!arrayOfObjects[index][7][\"gsPickUp\"]) {\n      arrayOfObjects[index][7][\"pickUpStatus\"] = status;\n      this.setState({\n        orderRows: arrayOfObjects\n      });\n    }\n  }\n\n  render() {\n    /*\n     this variable arrayOfObjects converts a nested array to an array of objects\n     since react table needed an array of objects as input.\n     */\n    var arrayOfObjects = this.state.orderRows.map((item, index) => {\n      return {\n        PickUpDate: item[0],\n        Last: item[1],\n        First: item[2],\n        Order: item[3],\n        SizeOrStyle: item[4],\n        ItemOrdered: item[5],\n        ItemQuantity: item[6],\n        PickupStatus: React.createElement(Checkbox, {\n          key: item[3] + item[5],\n          pickUpStatus: item[7][\"pickUpStatus\"],\n          orderNumber: item[3],\n          item: item[5],\n          index: index,\n          updatePickUp: this.updatePickUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })\n      };\n    });\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" ORDERS \"), React.createElement(OrderDataTable, {\n      arrayOfObjects: arrayOfObjects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["/Users/amitavbaruah/Documents/ethical-internal-website/src/components/Orders.js"],"names":["React","OrderDataTable","Checkbox","localStorage","require","Orders","Component","constructor","state","orderRows","updatePickUp","bind","componentDidMount","response","fetch","headers","authorization","get","Accept","status","path","props","history","push","json","setState","map","elem","index","arrayOfObjects","render","item","PickUpDate","Last","First","Order","SizeOrStyle","ItemOrdered","ItemQuantity","PickupStatus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport OrderDataTable from \"./OrderDataTable\";\nimport Checkbox from \"./Checkbox\";\nconst localStorage = require(\"local-storage\");\n\nclass Orders extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orderRows: []\n    };\n    this.updatePickUp = this.updatePickUp.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/orders\", {\n      headers: { authorization: localStorage.get(\"token\") },\n      Accept: \"application.json\"\n    });\n    if (response.status === 401) {\n      let path = \"/login\";\n      this.props.history.push(path);\n    }\n    const json = await response.json();\n    this.setState({ orderRows: json.map(elem => elem) });\n  }\n\n  updatePickUp(index, status) {\n    var arrayOfObjects = this.state.orderRows;\n    if (!arrayOfObjects[index][7][\"gsPickUp\"]) {\n      arrayOfObjects[index][7][\"pickUpStatus\"] = status;\n      this.setState({\n        orderRows: arrayOfObjects\n      });\n    }\n  }\n\n  render() {\n    /*\n     this variable arrayOfObjects converts a nested array to an array of objects\n     since react table needed an array of objects as input.\n     */\n    var arrayOfObjects = this.state.orderRows.map((item, index) => {\n      return {\n        PickUpDate: item[0],\n        Last: item[1],\n        First: item[2],\n        Order: item[3],\n        SizeOrStyle: item[4],\n        ItemOrdered: item[5],\n        ItemQuantity: item[6],\n        PickupStatus: (\n          <Checkbox\n            key={item[3] + item[5]}\n            pickUpStatus={item[7][\"pickUpStatus\"]}\n            orderNumber={item[3]}\n            item={item[5]}\n            index={index}\n            updatePickUp={this.updatePickUp}\n          />\n        )\n      };\n    });\n\n    return (\n      <div className=\"header\">\n        <h1 className=\"orders\"> ORDERS </h1>\n        <OrderDataTable arrayOfObjects={arrayOfObjects} />\n      </div>\n    );\n  }\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}