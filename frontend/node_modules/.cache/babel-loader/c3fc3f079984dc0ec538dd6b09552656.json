{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/amitavbaruah/Documents/ethical-internal-website/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/amitavbaruah/Documents/ethical-internal-website/frontend/src/components/Login.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  animation: \", \" 7s linear infinite;\\n  position: relative;\\n  padding: 1.5rem 1em;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport \"./Login.css\";\nimport React, { Component } from \"react\";\nimport ethicalLogo from \"../images/ethical.png\";\nimport ethicalLogoPic from \"../images/ethicalPic.png\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst bcryptjs = require(\"bcryptjs\");\n\nconst fetch = require(\"node-fetch\");\n\nconst localStorage = require(\"local-storage\");\n\nconst rotate = keyframes(_templateObject());\nconst Rotate = styled.div(_templateObject2(), rotate);\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      hash: \"\",\n      access_token: \"\",\n      validity: false\n    };\n  }\n  /*\n  function that checks  if access token is in the local storage.\n  If it is, it will route to announcement page and if it is not,\n  it will route to login page.\n  */\n\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/checkToken\", {\n      headers: {\n        authorization: localStorage.get(\"token\"),\n        Accept: \"application.json\"\n      }\n    });\n    const json = await response.json();\n\n    if (json.result === true) {\n      let path = \"/announcements\";\n      this.props.history.push(path);\n    }\n  }\n\n  async hashPassword() {\n    const hash = await bcryptjs.hash(this.state.input, 0);\n    this.setState({\n      hash: hash\n    });\n    return this.state.hash;\n  }\n\n  routeChange() {\n    let path = \"/announcements\";\n    this.props.history.push(path);\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hashedAttempt: await this.hashPassword()\n      })\n    });\n    const json = await response.json();\n    this.setState({\n      access_token: json.token,\n      validity: json.correctPassword\n    });\n\n    if (!this.state.validity) {\n      alert(\"Wrong password\");\n    } else {\n      localStorage.set(\"token\", this.state.access_token);\n      this.routeChange();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Rotate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"pic\",\n      src: ethicalLogoPic,\n      alt: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"pic2\",\n      src: ethicalLogo,\n      alt: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Welcome home, please log in below!\")), React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"passwordLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      name: \"input\",\n      value: this.state.input,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      onClick: () => this.buttonClick(),\n      id: \"button\",\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" \", \"Login\", \" \")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/amitavbaruah/Documents/ethical-internal-website/frontend/src/components/Login.js"],"names":["React","Component","ethicalLogo","ethicalLogoPic","styled","keyframes","bcryptjs","require","fetch","localStorage","rotate","Rotate","div","Login","constructor","handleChange","event","setState","input","target","value","state","hash","access_token","validity","componentDidMount","response","headers","authorization","get","Accept","json","result","path","props","history","push","hashPassword","routeChange","buttonClick","method","body","JSON","stringify","hashedAttempt","token","correctPassword","alert","set","render"],"mappings":"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","sourcesContent":["import \"./Login.css\";\nimport React, { Component } from \"react\";\nimport ethicalLogo from \"../images/ethical.png\";\nimport ethicalLogoPic from \"../images/ethicalPic.png\";\nimport styled, { keyframes } from \"styled-components\";\nconst bcryptjs = require(\"bcryptjs\");\nconst fetch = require(\"node-fetch\");\nconst localStorage = require(\"local-storage\");\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst Rotate = styled.div`\n  display: inline-block;\n  animation: ${rotate} 7s linear infinite;\n  position: relative;\n  padding: 1.5rem 1em;\n`;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      hash: \"\",\n      access_token: \"\",\n      validity: false\n    };\n  }\n\n  /*\n  function that checks  if access token is in the local storage.\n  If it is, it will route to announcement page and if it is not,\n  it will route to login page.\n  */\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/checkToken\", {\n      headers: {\n        authorization: localStorage.get(\"token\"),\n        Accept: \"application.json\"\n      }\n    });\n    const json = await response.json();\n    if (json.result === true) {\n      let path = \"/announcements\";\n      this.props.history.push(path);\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  async hashPassword() {\n    const hash = await bcryptjs.hash(this.state.input, 0);\n    this.setState({ hash: hash });\n    return this.state.hash;\n  }\n\n  routeChange() {\n    let path = \"/announcements\";\n    this.props.history.push(path);\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hashedAttempt: await this.hashPassword()\n      })\n    });\n\n    const json = await response.json();\n    this.setState({ access_token: json.token, validity: json.correctPassword });\n    if (!this.state.validity) {\n      alert(\"Wrong password\");\n    } else {\n      localStorage.set(\"token\", this.state.access_token);\n      this.routeChange();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"block\">\n          <Rotate>\n            <img className=\"pic\" src={ethicalLogoPic} alt=\"profile\" />\n          </Rotate>\n          <div className=\"logo\">\n            <img className=\"pic2\" src={ethicalLogo} alt=\"profile\" />\n          </div>\n          <div className=\"welcome\">\n            <div>Welcome home, please log in below!</div>\n          </div>\n          <div className=\"login\">\n            <label className=\"passwordLabel\">\n              Password:\n              <input\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"input\"\n                value={this.state.input}\n                onChange={this.handleChange}\n              />\n            </label>\n          </div>\n          <button\n            onClick={() => this.buttonClick()}\n            id=\"button\"\n            type=\"submit\"\n            value=\"Login\"\n          >\n            {\" \"}\n            Login{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}