{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/amitavbaruah/Documents/ethical-internal-website/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/amitavbaruah/Documents/ethical-internal-website/frontend/src/components/Announcements.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  /* Adapt the colors based on primary prop */\\n  background: \", \";\\n  color: \", \";\\n  font-size: 1em;\\n  margin: 1em;\\n  padding: 0.25em 1em;\\n  border: 2px solid #8dc34d;\\n  border-radius: 4px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Post from \"./Post\";\nimport \"./Announcements.css\";\nimport styled from \"styled-components\";\n\nconst localStorage = require(\"local-storage\");\n\nconst Button = styled.button(_templateObject(), props => props.primary ? \"#8dc34d\" : \"white\", props => props.primary ? \"white\" : \"#8dc34d\");\n\nclass Announcements extends React.Component {\n  constructor() {\n    super();\n\n    this.titleInput = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.infoInput = event => {\n      this.setState({\n        info: event.target.value\n      });\n    };\n\n    this.state = {\n      postValues: [],\n      creating: false,\n      title: \"\",\n      info: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/announcements\", {\n      headers: {\n        authorization: localStorage.get(\"token\")\n      }\n    });\n\n    if (response.status === 401) {\n      let path = \"/login\";\n      this.props.history.push(path);\n    }\n\n    const json = await response.json();\n    this.setState({\n      postValues: json\n    });\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/announcements\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        authorization: localStorage.get(\"token\")\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        info: this.state.info\n      })\n    });\n    const json = await response.json();\n    this.setState({\n      creating: false,\n      postValues: [{\n        id: json.id,\n        user_id: null,\n        title: this.state.title,\n        info: this.state.info,\n        time: null\n      }].concat(this.state.postValues)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Announcements-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"ANNOUNCEMENTS \"), React.createElement(\"div\", {\n      className: \"dropdown-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      primary: true,\n      onClick: () => this.setState({\n        creating: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Make new announcement\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.creating && React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"title\",\n      id: \"story\",\n      name: \"story\",\n      resize: \"vertical\",\n      type: \"text\",\n      inputProps: {\n        style: {\n          fontSize: 40\n        }\n      },\n      placeholder: \"Announcement title\",\n      onChange: this.titleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"textArea\",\n      id: \"story\",\n      name: \"story\",\n      resize: \"vertical\",\n      type: \"text\",\n      inputProps: {\n        style: {\n          fontSize: 40\n        }\n      },\n      placeholder: \"Type your announcement here...\",\n      onChange: this.infoInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Button, {\n      primary: true,\n      onClick: () => this.buttonClick(),\n      id: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Post\"))), React.createElement(\"div\", {\n      className: \"posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.postValues.map(item => React.createElement(Post, Object.assign({\n      key: item.id\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Announcements;","map":{"version":3,"sources":["/Users/amitavbaruah/Documents/ethical-internal-website/frontend/src/components/Announcements.js"],"names":["React","Post","styled","localStorage","require","Button","button","props","primary","Announcements","Component","constructor","titleInput","event","setState","title","target","value","infoInput","info","state","postValues","creating","componentDidMount","response","fetch","headers","authorization","get","status","path","history","push","json","buttonClick","method","Accept","body","JSON","stringify","id","user_id","time","concat","render","style","fontSize","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Post from \"./Post\";\nimport \"./Announcements.css\";\nimport styled from \"styled-components\";\n\nconst localStorage = require(\"local-storage\");\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => (props.primary ? \"#8dc34d\" : \"white\")};\n  color: ${props => (props.primary ? \"white\" : \"#8dc34d\")};\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid #8dc34d;\n  border-radius: 4px;\n`;\n\nclass Announcements extends React.Component {\n  constructor() {\n    super();\n    this.state = { postValues: [], creating: false, title: \"\", info: \"\" };\n  }\n\n  titleInput = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  infoInput = event => {\n    this.setState({ info: event.target.value });\n  };\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:3001/announcements\", {\n      headers: { authorization: localStorage.get(\"token\") }\n    });\n    if (response.status === 401) {\n      let path = \"/login\";\n      this.props.history.push(path);\n    }\n    const json = await response.json();\n    this.setState({ postValues: json });\n  }\n\n  async buttonClick() {\n    const response = await fetch(\"http://localhost:3001/announcements\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        authorization: localStorage.get(\"token\")\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        info: this.state.info\n      })\n    });\n    const json = await response.json();\n    this.setState({\n      creating: false,\n      postValues: [\n        {\n          id: json.id,\n          user_id: null,\n          title: this.state.title,\n          info: this.state.info,\n          time: null\n        }\n      ].concat(this.state.postValues)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <h1 className=\"Announcements-section\">ANNOUNCEMENTS </h1>\n        <div className=\"dropdown-button\">\n          <Button\n            primary\n            onClick={() =>\n              this.setState({\n                creating: true\n              })\n            }\n          >\n            Make new announcement\n          </Button>\n        </div>\n        <div>\n          {this.state.creating && (\n            <div className=\"input\">\n              <form>\n                <textarea\n                  className=\"title\"\n                  id=\"story\"\n                  name=\"story\"\n                  resize=\"vertical\"\n                  type=\"text\"\n                  inputProps={{ style: { fontSize: 40 } }}\n                  placeholder=\"Announcement title\"\n                  onChange={this.titleInput}\n                ></textarea>\n                <br />\n                <textarea\n                  className=\"textArea\"\n                  id=\"story\"\n                  name=\"story\"\n                  resize=\"vertical\"\n                  type=\"text\"\n                  inputProps={{ style: { fontSize: 40 } }}\n                  placeholder=\"Type your announcement here...\"\n                  onChange={this.infoInput}\n                ></textarea>\n              </form>\n              <Button\n                primary\n                onClick={() => this.buttonClick()}\n                id=\"button\"\n                type=\"submit\"\n              >\n                Post\n              </Button>\n            </div>\n          )}\n        </div>\n        <div className=\"posts\">\n          {this.state.postValues.map(item => (\n            <Post key={item.id} {...item} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Announcements;\n"]},"metadata":{},"sourceType":"module"}